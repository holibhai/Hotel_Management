{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\holin\\\\OneDrive\\\\Desktop\\\\hotel booking\\\\phegon-hotel-booking-and-management\\\\frontend\\\\src\\\\component\\\\booking_rooms\\\\AllRoomsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ApiService from '../../service/ApiService';\nimport Pagination from '../common/Pagination';\nimport RoomResult from '../common/RoomResult';\nimport RoomSearch from '../common/RoomSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllRoomsPage = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [filteredRooms, setFilteredRooms] = useState([]);\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [selectedRoomType, setSelectedRoomType] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [roomsPerPage] = useState(5);\n  const handleSearchResult = results => {\n    setRooms(results);\n    setFilteredRooms(results);\n  };\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await ApiService.getAllRooms();\n        const allRooms = response.roomList;\n        setRooms(allRooms);\n        setFilteredRooms(allRooms);\n      } catch (error) {\n        console.error('Error fetching rooms:', error.message);\n      }\n    };\n    const fetchRoomTypes = async () => {\n      try {\n        const types = await ApiService.getRoomTypes();\n        setRoomTypes(types);\n      } catch (error) {\n        console.error('Error fetching room types:', error.message);\n      }\n    };\n    fetchRooms();\n    fetchRoomTypes();\n  }, []);\n  const handleRoomTypeChange = e => {\n    setSelectedRoomType(e.target.value);\n    filterRooms(e.target.value);\n  };\n  const filterRooms = type => {\n    if (type === '') {\n      setFilteredRooms(rooms);\n    } else {\n      const filtered = rooms.filter(room => room.roomType === type);\n      setFilteredRooms(filtered);\n    }\n    setCurrentPage(1);\n  };\n  const indexOfLastRoom = currentPage * roomsPerPage;\n  const indexOfFirstRoom = indexOfLastRoom - roomsPerPage;\n  const currentRooms = filteredRooms.slice(indexOfFirstRoom, indexOfLastRoom);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-gray-800 mb-6\",\n      children: \"All Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row sm:items-center justify-between mb-6 gap-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-medium text-gray-700\",\n          children: \"Filter by Room Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedRoomType,\n          onChange: handleRoomTypeChange,\n          className: \"border rounded px-3 py-2 text-gray-700 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), roomTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(RoomSearch, {\n        handleSearchResult: handleSearchResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(RoomResult, {\n        roomSearchResults: currentRooms\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        roomsPerPage: roomsPerPage,\n        totalRooms: filteredRooms.length,\n        currentPage: currentPage,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AllRoomsPage, \"Py64oOdvdSWgNVm4UNBlKvhvk7o=\");\n_c = AllRoomsPage;\nexport default AllRoomsPage;\nvar _c;\n$RefreshReg$(_c, \"AllRoomsPage\");","map":{"version":3,"names":["React","useState","useEffect","ApiService","Pagination","RoomResult","RoomSearch","jsxDEV","_jsxDEV","AllRoomsPage","_s","rooms","setRooms","filteredRooms","setFilteredRooms","roomTypes","setRoomTypes","selectedRoomType","setSelectedRoomType","currentPage","setCurrentPage","roomsPerPage","handleSearchResult","results","fetchRooms","response","getAllRooms","allRooms","roomList","error","console","message","fetchRoomTypes","types","getRoomTypes","handleRoomTypeChange","e","target","value","filterRooms","type","filtered","filter","room","roomType","indexOfLastRoom","indexOfFirstRoom","currentRooms","slice","paginate","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","roomSearchResults","totalRooms","length","_c","$RefreshReg$"],"sources":["C:/Users/holin/OneDrive/Desktop/hotel booking/phegon-hotel-booking-and-management/frontend/src/component/booking_rooms/AllRoomsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ApiService from '../../service/ApiService';\r\nimport Pagination from '../common/Pagination';\r\nimport RoomResult from '../common/RoomResult';\r\nimport RoomSearch from '../common/RoomSearch';\r\n\r\nconst AllRoomsPage = () => {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [filteredRooms, setFilteredRooms] = useState([]);\r\n  const [roomTypes, setRoomTypes] = useState([]);\r\n  const [selectedRoomType, setSelectedRoomType] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [roomsPerPage] = useState(5);\r\n\r\n  const handleSearchResult = (results) => {\r\n    setRooms(results);\r\n    setFilteredRooms(results);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchRooms = async () => {\r\n      try {\r\n        const response = await ApiService.getAllRooms();\r\n        const allRooms = response.roomList;\r\n        setRooms(allRooms);\r\n        setFilteredRooms(allRooms);\r\n      } catch (error) {\r\n        console.error('Error fetching rooms:', error.message);\r\n      }\r\n    };\r\n\r\n    const fetchRoomTypes = async () => {\r\n      try {\r\n        const types = await ApiService.getRoomTypes();\r\n        setRoomTypes(types);\r\n      } catch (error) {\r\n        console.error('Error fetching room types:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchRooms();\r\n    fetchRoomTypes();\r\n  }, []);\r\n\r\n  const handleRoomTypeChange = (e) => {\r\n    setSelectedRoomType(e.target.value);\r\n    filterRooms(e.target.value);\r\n  };\r\n\r\n  const filterRooms = (type) => {\r\n    if (type === '') {\r\n      setFilteredRooms(rooms);\r\n    } else {\r\n      const filtered = rooms.filter((room) => room.roomType === type);\r\n      setFilteredRooms(filtered);\r\n    }\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const indexOfLastRoom = currentPage * roomsPerPage;\r\n  const indexOfFirstRoom = indexOfLastRoom - roomsPerPage;\r\n  const currentRooms = filteredRooms.slice(indexOfFirstRoom, indexOfLastRoom);\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto px-4 py-8\">\r\n      <h2 className=\"text-3xl font-bold text-gray-800 mb-6\">All Rooms</h2>\r\n\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center justify-between mb-6 gap-4\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <label className=\"font-medium text-gray-700\">Filter by Room Type:</label>\r\n          <select\r\n            value={selectedRoomType}\r\n            onChange={handleRoomTypeChange}\r\n            className=\"border rounded px-3 py-2 text-gray-700 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"\">All</option>\r\n            {roomTypes.map((type) => (\r\n              <option key={type} value={type}>\r\n                {type}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-6\">\r\n        <RoomSearch handleSearchResult={handleSearchResult} />\r\n      </div>\r\n\r\n      <div className=\"mb-6\">\r\n        <RoomResult roomSearchResults={currentRooms} />\r\n      </div>\r\n\r\n      <div className=\"mt-6\">\r\n        <Pagination\r\n          roomsPerPage={roomsPerPage}\r\n          totalRooms={filteredRooms.length}\r\n          currentPage={currentPage}\r\n          paginate={paginate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllRoomsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}