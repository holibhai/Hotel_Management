{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\holin\\\\OneDrive\\\\Desktop\\\\hotel booking\\\\phegon-hotel-booking-and-management\\\\frontend\\\\src\\\\component\\\\admin\\\\ManageRoomPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ApiService from '../../service/ApiService';\nimport Pagination from '../common/Pagination';\nimport RoomResult from '../common/RoomResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageRoomPage = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [filteredRooms, setFilteredRooms] = useState([]);\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [selectedRoomType, setSelectedRoomType] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [roomsPerPage] = useState(5);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await ApiService.getAllRooms();\n        const allRooms = response.roomList;\n        setRooms(allRooms);\n        setFilteredRooms(allRooms);\n      } catch (error) {\n        console.error('Error fetching rooms:', error.message);\n      }\n    };\n    const fetchRoomTypes = async () => {\n      try {\n        const types = await ApiService.getRoomTypes();\n        setRoomTypes(types);\n      } catch (error) {\n        console.error('Error fetching room types:', error.message);\n      }\n    };\n    fetchRooms();\n    fetchRoomTypes();\n  }, []);\n  const handleRoomTypeChange = e => {\n    setSelectedRoomType(e.target.value);\n    filterRooms(e.target.value);\n  };\n  const filterRooms = type => {\n    if (type === '') {\n      setFilteredRooms(rooms);\n    } else {\n      const filtered = rooms.filter(room => room.roomType === type);\n      setFilteredRooms(filtered);\n    }\n    setCurrentPage(1); // Reset to first page after filtering\n  };\n\n  // Pagination\n  const indexOfLastRoom = currentPage * roomsPerPage;\n  const indexOfFirstRoom = indexOfLastRoom - roomsPerPage;\n  const currentRooms = filteredRooms.slice(indexOfFirstRoom, indexOfLastRoom);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6 bg-white rounded-lg shadow-lg mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-gray-800 mb-8\",\n      children: \"All Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col md:flex-row md:items-center justify-between mb-8 space-y-4 md:space-y-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"roomType\",\n          className: \"font-medium text-gray-700\",\n          children: \"Filter by Room Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"roomType\",\n          value: selectedRoomType,\n          onChange: handleRoomTypeChange,\n          className: \"px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), roomTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/admin/add-room'),\n        className: \"px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition\",\n        children: \"Add Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoomResult, {\n      roomSearchResults: currentRooms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        roomsPerPage: roomsPerPage,\n        totalRooms: filteredRooms.length,\n        currentPage: currentPage,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageRoomPage, \"seuBRJGvN5tyU7xPngAIMkE7Y5E=\", false, function () {\n  return [useNavigate];\n});\n_c = ManageRoomPage;\nexport default ManageRoomPage;\nvar _c;\n$RefreshReg$(_c, \"ManageRoomPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ApiService","Pagination","RoomResult","jsxDEV","_jsxDEV","ManageRoomPage","_s","rooms","setRooms","filteredRooms","setFilteredRooms","roomTypes","setRoomTypes","selectedRoomType","setSelectedRoomType","currentPage","setCurrentPage","roomsPerPage","navigate","fetchRooms","response","getAllRooms","allRooms","roomList","error","console","message","fetchRoomTypes","types","getRoomTypes","handleRoomTypeChange","e","target","value","filterRooms","type","filtered","filter","room","roomType","indexOfLastRoom","indexOfFirstRoom","currentRooms","slice","paginate","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","onClick","roomSearchResults","totalRooms","length","_c","$RefreshReg$"],"sources":["C:/Users/holin/OneDrive/Desktop/hotel booking/phegon-hotel-booking-and-management/frontend/src/component/admin/ManageRoomPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ApiService from '../../service/ApiService';\r\nimport Pagination from '../common/Pagination';\r\nimport RoomResult from '../common/RoomResult';\r\n\r\nconst ManageRoomPage = () => {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [filteredRooms, setFilteredRooms] = useState([]);\r\n  const [roomTypes, setRoomTypes] = useState([]);\r\n  const [selectedRoomType, setSelectedRoomType] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [roomsPerPage] = useState(5);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchRooms = async () => {\r\n      try {\r\n        const response = await ApiService.getAllRooms();\r\n        const allRooms = response.roomList;\r\n        setRooms(allRooms);\r\n        setFilteredRooms(allRooms);\r\n      } catch (error) {\r\n        console.error('Error fetching rooms:', error.message);\r\n      }\r\n    };\r\n\r\n    const fetchRoomTypes = async () => {\r\n      try {\r\n        const types = await ApiService.getRoomTypes();\r\n        setRoomTypes(types);\r\n      } catch (error) {\r\n        console.error('Error fetching room types:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchRooms();\r\n    fetchRoomTypes();\r\n  }, []);\r\n\r\n  const handleRoomTypeChange = (e) => {\r\n    setSelectedRoomType(e.target.value);\r\n    filterRooms(e.target.value);\r\n  };\r\n\r\n  const filterRooms = (type) => {\r\n    if (type === '') {\r\n      setFilteredRooms(rooms);\r\n    } else {\r\n      const filtered = rooms.filter((room) => room.roomType === type);\r\n      setFilteredRooms(filtered);\r\n    }\r\n    setCurrentPage(1); // Reset to first page after filtering\r\n  };\r\n\r\n  // Pagination\r\n  const indexOfLastRoom = currentPage * roomsPerPage;\r\n  const indexOfFirstRoom = indexOfLastRoom - roomsPerPage;\r\n  const currentRooms = filteredRooms.slice(indexOfFirstRoom, indexOfLastRoom);\r\n\r\n  // Change page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6 bg-white rounded-lg shadow-lg mt-10\">\r\n      <h2 className=\"text-3xl font-bold text-gray-800 mb-8\">All Rooms</h2>\r\n\r\n      <div className=\"flex flex-col md:flex-row md:items-center justify-between mb-8 space-y-4 md:space-y-0\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <label htmlFor=\"roomType\" className=\"font-medium text-gray-700\">\r\n            Filter by Room Type:\r\n          </label>\r\n          <select\r\n            id=\"roomType\"\r\n            value={selectedRoomType}\r\n            onChange={handleRoomTypeChange}\r\n            className=\"px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 transition\"\r\n          >\r\n            <option value=\"\">All</option>\r\n            {roomTypes.map((type) => (\r\n              <option key={type} value={type}>\r\n                {type}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => navigate('/admin/add-room')}\r\n          className=\"px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition\"\r\n        >\r\n          Add Room\r\n        </button>\r\n      </div>\r\n\r\n      <RoomResult roomSearchResults={currentRooms} />\r\n\r\n      <div className=\"mt-8\">\r\n        <Pagination\r\n          roomsPerPage={roomsPerPage}\r\n          totalRooms={filteredRooms.length}\r\n          currentPage={currentPage}\r\n          paginate={paginate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageRoomPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}